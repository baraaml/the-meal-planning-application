generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                String              @id @default(uuid())
  name              String?             @db.VarChar(50)
  username          String              @unique @db.VarChar(50)
  email             String              @unique @db.VarChar(255)
  password          String              @db.Text
  isVerified        Boolean             @default(false)
  verifiedAt        DateTime?
  createdAt         DateTime            @default(now())
  updatedAt         DateTime            @default(now()) @updatedAt

  verificationCodes VerificationCode[]
  refreshTokens     RefreshToken[]
  PasswordResetToken PasswordResetToken[]
}

model VerificationCode {
  id        String    @id @default(uuid())
  code      String    @db.Text
  expiresAt DateTime
  createdAt DateTime  @default(now())
  isUsed    Boolean   @default(false)
  userId    String
  user      User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  
  @@index([userId])
  @@unique([userId, code]) // Optional: prevents duplicate codes per user if desired
}

model RefreshToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  isActive   Boolean @default(true) 
  expiresAt DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model PasswordResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  userId    String
  isUsed      Boolean  @default(false)
  createdAt DateTime @default(now())
  expiresAt DateTime

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

